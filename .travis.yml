language: cpp
sudo: true
dist: focal
compiler: g++-10
os: linux


env:
  global:
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    - CMAKE_VERSION="3.16.0"
    - GCC_VERSION=10
    - BUILD_TYPE=Release
    - CPPSTD=17

addons: 
  apt:
    sources:
      - sourceline: 'ppa:ubuntu-toolchain-r/test'
    packages:
      - gcc-10
      - g++-10

cache:
  directories:
    - ${DEPS_DIR}/cmake-${CMAKE_VERSION}


#    - env: GCC_VERSION=10 BUILD_TYPE=Release CPPSTD=17
#      os: linux
#      addons: *gcc8
#
#    - env: CLANG_VERSION=11 BUILD_TYPE=Release CPPSTD=17
#      os: linux
#      addons: &clang11
#        apt:
#          packages:
#            - clang-11
#            - libstdc++-10-dev
#            - cmake
#          sources:
#            - ubuntu-toolchain-r/test
#
#            - llvm-toolchain-xenial-4.0


    #- env: XCODE_VERSION=9.4 BUILD_TYPE=Release CPPSTD=14
    #  os: osx
    #  osx_image: xcode9.4

    #- env: XCODE_VERSION=10.2 BUILD_TYPE=Release CPPSTD=14
    #  os: osx
    #  osx_image: xcode10.2

    #- env: BUILD_TYPE=Release CPPSTD=14
    #  os: osx
    #  compiler: clang


before_script:
  - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | sudo apt-key add -
  - sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
  - sudo apt-get update

before_install:
  - set -e
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
          brew update
          brew install gnu-sed
          brew install gnu-which
          brew upgrade cmake
          export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
    fi
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - set +e; cd ${DEPS_DIR}; set -e; git clone https://github.com/google/googletest.git
  - set +e; cd ${DEPS_DIR}; set -e; git clone https://github.com/oneapi-src/oneTBB.git
  - which $CXX & $CXX --version

install:
  - mkdir -p build
  - mkdir -p build/gtest/$BUILD_TYPE
  - set +e; cd build/gtest/$BUILD_TYPE; set -e; pwd
  - cmake ${DEPS_DIR}/googletest -DBUILD_GMOCK=OFF -DBUILD_GTEST=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/external -DCMAKE_CXX_STANDARD=$CPPSTD
  - make -j 2
  - make install
  - set +e; cd ${TRAVIS_BUILD_DIR}; set -e; pwd
  - ls -l
  - mkdir -p build/onetbb/$BUILD_TYPE
  - set +e; cd build/onetbb/$BUILD_TYPE; set -e; pwd
  - ls -l
  - ls ${DEPS_DIR}
  - ls ${DEPS_DIR}/oneTBB
  - cmake ${DEPS_DIR}/oneTBB -DCMAKE_BUILD_TYPE=Release - -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/external -DCMAKE_CXX_STANDARD=$CPPSTD
  - mkdir -p ${TRAVIS_BUILD_DIR}/build
  - set +e; cd ${TRAVIS_BUILD_DIR}/build; set -e; pwd
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_PREFIX_PATH=${DEPS_DIR}/external -DCMAKE_CXX_STANDARD=$CPPSTD -DGRPPI_TBB_ENABLE=OFF -DGRPPI_FF_ENABLE=OFF
  - cat CMakeFiles/CMakeError.log || true
  - cat CMakeFiles/CMakeOutput.log || true
  - make -j2
  #- ctest -VV --timeout 10

script:
  - export OMP_NUM_THREADS=8
  - ctest -VV --timeout 100
